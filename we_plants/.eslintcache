[{"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/index.js":"1","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/reportWebVitals.js":"2","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/App/app.js":"3","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/userContext.js":"4","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Router/router.js":"5","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/footer.js":"6","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/login.js":"7","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/form.js":"8","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/mainPage.js":"9","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/userInfo.js":"10","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/searchPlant.js":"11","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/weatherAPI.js":"12","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/myPlants.js":"13","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/plantResult.js":"14","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Plant/plantCard.js":"15","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/loginForm.js":"16","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/validateInfo.js":"17","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/useFormLogin.js":"18","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/formSignup.js":"19","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/validateInfo.js":"20","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/useFormRegister.js":"21","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Admin/adminMainPage.js":"22","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Admin/adminAddPage.js":"23","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/notify.js":"24","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/notification.js":"25"},{"size":349,"mtime":1613032432092,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611901235757,"results":"28","hashOfConfig":"27"},{"size":1725,"mtime":1614005973885,"results":"29","hashOfConfig":"27"},{"size":83,"mtime":1613060806208,"results":"30","hashOfConfig":"27"},{"size":884,"mtime":1613998601881,"results":"31","hashOfConfig":"27"},{"size":1133,"mtime":1613998601874,"results":"32","hashOfConfig":"27"},{"size":1316,"mtime":1613980861790,"results":"33","hashOfConfig":"27"},{"size":583,"mtime":1613998634694,"results":"34","hashOfConfig":"27"},{"size":881,"mtime":1613998631550,"results":"35","hashOfConfig":"27"},{"size":353,"mtime":1613998601878,"results":"36","hashOfConfig":"27"},{"size":1584,"mtime":1614008655013,"results":"37","hashOfConfig":"27"},{"size":838,"mtime":1613412428501,"results":"38","hashOfConfig":"27"},{"size":1624,"mtime":1614006800350,"results":"39","hashOfConfig":"27"},{"size":3955,"mtime":1614008719676,"results":"40","hashOfConfig":"27"},{"size":4914,"mtime":1614011011122,"results":"41","hashOfConfig":"27"},{"size":1917,"mtime":1613998661216,"results":"42","hashOfConfig":"27"},{"size":478,"mtime":1612617605058,"results":"43","hashOfConfig":"27"},{"size":1492,"mtime":1613944192185,"results":"44","hashOfConfig":"27"},{"size":2785,"mtime":1613998903053,"results":"45","hashOfConfig":"27"},{"size":1042,"mtime":1612714414725,"results":"46","hashOfConfig":"27"},{"size":1374,"mtime":1613940190045,"results":"47","hashOfConfig":"27"},{"size":1126,"mtime":1613998601868,"results":"48","hashOfConfig":"27"},{"size":9581,"mtime":1613998601868,"results":"49","hashOfConfig":"27"},{"size":966,"mtime":1614005717901,"results":"50","hashOfConfig":"27"},{"size":2484,"mtime":1614004262886,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"vwp6ce",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/index.js",[],["108","109"],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/reportWebVitals.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/App/app.js",["110","111"],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/userContext.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Router/router.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/footer.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/login.js",["112"],"import React, { useContext, useState } from \"react\";\nimport MainPage from \"../MainPage/mainPage\";\nimport \"../Register/form.css\";\nimport AdminMainPage from \"../Admin/adminMainPage\";\nimport LoginForm from \"./loginForm\";\nimport { UserContext } from \"../userContext\";\nimport axios from 'axios';\n\nconst useStyle = {\n  loginForm: {\n    marginLeft: '40vh',\n  }\n}\n\nconst Login = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const { userInfo, setUserInfo } = useContext(UserContext);\n\n  const submitForm = () => {\n    setIsLoggedIn(true);\n  };\n\n  const handleLogOut = () => {\n    axios.get(`http://localhost:3000/api/users/logout`, {\n      withCredentials: true\n    })\n      .then(docs => {\n        if (docs.data === 'Successfully logout') {\n          setUserInfo(null);\n        }})\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n      {(!userInfo) ? (\n        <div className='loginForm' style={useStyle.loginForm}>\n          <LoginForm setUserInfo={setUserInfo} submitForm={submitForm} />\n        </div>\n      ) : (userInfo.role === 'user' ? <MainPage userInfo={userInfo} setUserInfo={setUserInfo} handleLogOut={handleLogOut}/> :\n       <AdminMainPage userInfo={userInfo} setUserInfo={setUserInfo} handleLogOut={handleLogOut}/>\n         )}\n    </div>\n  );\n};\nexport default Login;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/form.js",["113"],"import React, { useState,useContext } from \"react\";\nimport \"./form.css\";\nimport FormSignup from \"./formSignup\";\nimport {UserContext} from '../userContext';\nimport Login from \"../Login/login\";\n\n\nconst Form = (props) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const {userInfo, setUserInfo} = useContext(UserContext);\n\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n\n  return (\n    <div className=\"form-container\">\n      {!isSubmitted ? <FormSignup submitForm={submitForm} setUserInfo={setUserInfo} /> : <Login /> }\n    </div>\n  );\n};\nexport default Form;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/mainPage.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/userInfo.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/searchPlant.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/weatherAPI.js",["114"],"import React, { useState } from \"react\";\n\nconst WeatherAPI = () => {\n  const [weatherFeatures, setWeatherFeatures] = useState({\n    description: \"\",\n    temp: \"\",\n    location: \"\",\n  });\n\n  const fetchWeather = async () => {\n    const apiCall = await fetch(\"https://weplants.herokuapp.com/api/weather\");\n    const weather = await apiCall.json();\n    const celcius = Math.round(parseFloat(weather.main.temp) - 273.15);\n    const description = weather.weather[0].description;\n    const location = weather.name;\n    setWeatherFeatures({ description, celcius, location });\n  };\n\n  return (\n      <div id=\"weather\">\n        <div id=\"description\">{weatherFeatures.description}</div>\n        <h1 id=\"temp\">{weatherFeatures.celcius}</h1>\n        <div id=\"location\">{weatherFeatures.location}</div>\n      </div>\n  );\n};\nexport default WeatherAPI;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/myPlants.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/plantResult.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Plant/plantCard.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/loginForm.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/validateInfo.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/useFormLogin.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/formSignup.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/validateInfo.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/useFormRegister.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Admin/adminMainPage.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Admin/adminAddPage.js",["115"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { Link, NavLink } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginLeft: '26vh',\n        marginTop: '5vh',\n    },\n    container: {\n        marginLeft: '50vh',\n        border: '1px solid black',\n        borderRadius: '5px',\n        // height: '85vh',\n        background: 'rgba(250, 235, 215, 0.39)',\n\n    },\n    title: {\n        marginLeft: '12vh',\n    },\n    subTitle: {\n        marginLeft: '12vh',\n    }\n}));\n\nconst AdminAddPlant = () => {\n    const classes = useStyles();\n    const [values, setValues] = useState({\n        plantName: \"\",\n        specie: \"\",\n        imageUrl: \"\",\n        family: \"\",\n        description: \"\",\n        light: '',\n        water: '',\n        feed: '',\n        temperature: ''\n    });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setValues({\n            ...values,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        axios\n            .post(`http://localhost:3000/api/plants`, values, {\n                withCredentials: true,\n            })\n            .then((res) => {\n                if (res.data === \"Successfully added plant!\") {\n                    alert('Plant added to data base');\n                }\n                else {\n                    console.log(\"Error\");\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        return (\n            <Link to='MainPage' />\n        )\n    };\n\n    return (\n        <Container maxWidth=\"sm\" className={classes.container}>\n            <Typography variant=\"h2\" gutterBottom className={classes.title}>\n                Add new plant\n            </Typography>\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n                <div className={classes.subTitle}>\n                    <Typography variant=\"overline\" gutterBottom className={classes.title}>\n                        Plant properties:\n            </Typography>\n                </div>\n                <div>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Plant name\"\n                        multiline\n                        type=\"text\"\n                        name=\"plantName\"\n                        rowsMax={4}\n                        value={values.plantName}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Specie\"\n                        multiline\n                        type=\"text\"\n                        name=\"specie\"\n                        rowsMax={4}\n                        value={values.specie}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Family\"\n                        multiline\n                        type=\"text\"\n                        name=\"family\"\n                        rowsMax={4}\n                        value={values.family}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"URL\"\n                        multiline\n                        type=\"text\"\n                        name=\"imageUrl\"\n                        rowsMax={4}\n                        value={values.imageUrl}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Description\"\n                        multiline\n                        type=\"text\"\n                        name=\"description\"\n                        rowsMax={4}\n                        value={values.description}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                </div>\n                <div className={classes.subTitle}>\n                    <Typography variant=\"overline\" gutterBottom className={classes.title}>\n                        Way of care:\n            </Typography>\n                </div>\n                <div>\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Water\"\n                        multiline\n                        type=\"text\"\n                        name=\"water\"\n                        rowsMax={4}\n                        value={values.water}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Feed\"\n                        multiline\n                        type=\"text\"\n                        name=\"feed\"\n                        rowsMax={4}\n                        value={values.feed}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Light\"\n                        multiline\n                        type=\"text\"\n                        name=\"light\"\n                        rowsMax={4}\n                        value={values.light}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                    <TextField\n                        id=\"outlined-multiline-flexible\"\n                        label=\"Temperature\"\n                        multiline\n                        type=\"text\"\n                        name=\"temperature\"\n                        rowsMax={4}\n                        value={values.temperature}\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                    />\n                </div>\n                {/* <NavLink to=\"/Login\"> */}\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.button}\n                    startIcon={<SaveIcon />}\n                >\n                    Save\n                </Button>\n                {/* </NavLink> */}\n            </form>\n\n        </Container>\n    );\n}\nexport default AdminAddPlant;","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/notify.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/notification.js",["116","117","118"],"import React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\n\nconst Notification = ({ favorite, mail, firstName }) => {\n    //favoriteDate is the day of water plant after calculation to send notification\n    const favoriteDate = new Date(favorite.date);\n    const water = favorite.wayOfCare[0].water;\n    const days = parseInt(water.substr(0, water.indexOf('days')));\n    favoriteDate.setDate(favoriteDate.getDate() + days);\n    const today = new Date();\n\n    const email = {\n        firstName: firstName,\n        type: 'notification',\n        plantName: favorite.plantName,\n        email: 'nivswisa9@gmail.com',\n        water: water\n    }\n\n    // if ((favoriteDate.getDate() === today.getDate()) && (favoriteDate.getMonth() + 1 === today.getMonth() + 1) && (favoriteDate.getFullYear() === today.getFullYear())) {\n    //     axios\n    //         .post(`http://localhost:3000/api/mail`, email, {\n    //             withCredentials: true,\n    //         })\n    //         .then((res) => { console.log('mail sent') })\n    //         .catch(err => console.log(err));\n    // }\n\n    return (\n        <Accordion>\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-label=\"Expand\"\n                aria-controls=\"additional-actions1-content\"\n                id=\"additional-actions1-header\"\n            >\n                <FormControlLabel\n                    aria-label=\"Acknowledge\"\n                    onClick={(event) => event.stopPropagation()}\n                    onFocus={(event) => event.stopPropagation()}\n                    control={<Checkbox />}\n                    label={`Tasks for ${favorite.plantName}`}\n                />\n            </AccordionSummary>\n            <AccordionDetails>\n                <Typography color=\"textSecondary\">\n                    {`${favoriteDate.getDate()}-${favoriteDate.getMonth() + 1}-${favoriteDate.getFullYear()} - Need to watering the plant ${favorite.plantName}`}\n                </Typography>\n            </AccordionDetails>\n        </Accordion>\n    )\n}\n\nexport default Notification;",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":20},{"ruleId":"123","severity":1,"message":"127","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":23},{"ruleId":"123","severity":1,"message":"128","line":16,"column":10,"nodeType":"125","messageId":"126","endLine":16,"endColumn":20},{"ruleId":"123","severity":1,"message":"129","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":18},{"ruleId":"123","severity":1,"message":"130","line":10,"column":9,"nodeType":"125","messageId":"126","endLine":10,"endColumn":21},{"ruleId":"123","severity":1,"message":"131","line":9,"column":16,"nodeType":"125","messageId":"126","endLine":9,"endColumn":23},{"ruleId":"123","severity":1,"message":"132","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":13},{"ruleId":"123","severity":1,"message":"133","line":17,"column":11,"nodeType":"125","messageId":"126","endLine":17,"endColumn":16},{"ruleId":"123","severity":1,"message":"134","line":19,"column":11,"nodeType":"125","messageId":"126","endLine":19,"endColumn":16},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'backgroundImage' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'fetchWeather' is assigned a value but never used.","'NavLink' is defined but never used.","'axios' is defined but never used.","'today' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]