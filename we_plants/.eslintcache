[{"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/index.js":"1","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/reportWebVitals.js":"2","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/App/app.js":"3","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/userContext.js":"4","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Router/router.js":"5","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/footer.js":"6","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/App/welcomePage.js":"7","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/login.js":"8","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/loginForm.js":"9","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/mainPage.js":"10","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/validateInfo.js":"11","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/useFormLogin.js":"12","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/weatherAPI.js":"13","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/userInfo.js":"14","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/myPlants.js":"15","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/searchPlant.js":"16","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/plantResult.js":"17","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Plant/plantCard.js":"18","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/form.js":"19","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/formSuccess.js":"20","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/formSignup.js":"21","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/validateInfo.js":"22","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/useFormRegister.js":"23"},{"size":349,"mtime":1613032432092,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1611901235757,"results":"26","hashOfConfig":"25"},{"size":1239,"mtime":1613377321366,"results":"27","hashOfConfig":"25"},{"size":83,"mtime":1613060806208,"results":"28","hashOfConfig":"25"},{"size":681,"mtime":1613377244472,"results":"29","hashOfConfig":"25"},{"size":1038,"mtime":1613053222889,"results":"30","hashOfConfig":"25"},{"size":714,"mtime":1613032432078,"results":"31","hashOfConfig":"25"},{"size":2090,"mtime":1613378211770,"results":"32","hashOfConfig":"25"},{"size":2319,"mtime":1613379419182,"results":"33","hashOfConfig":"25"},{"size":561,"mtime":1613058734303,"results":"34","hashOfConfig":"25"},{"size":478,"mtime":1612617605058,"results":"35","hashOfConfig":"25"},{"size":1606,"mtime":1613062310737,"results":"36","hashOfConfig":"25"},{"size":916,"mtime":1612617605064,"results":"37","hashOfConfig":"25"},{"size":586,"mtime":1613058264238,"results":"38","hashOfConfig":"25"},{"size":1713,"mtime":1613059482817,"results":"39","hashOfConfig":"25"},{"size":1639,"mtime":1613057789874,"results":"40","hashOfConfig":"25"},{"size":1229,"mtime":1613053551391,"results":"41","hashOfConfig":"25"},{"size":1918,"mtime":1613058908914,"results":"42","hashOfConfig":"25"},{"size":616,"mtime":1613032526914,"results":"43","hashOfConfig":"25"},{"size":246,"mtime":1612617778109,"results":"44","hashOfConfig":"25"},{"size":2872,"mtime":1612714390642,"results":"45","hashOfConfig":"25"},{"size":1042,"mtime":1612714414725,"results":"46","hashOfConfig":"25"},{"size":1139,"mtime":1613040786891,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"vwp6ce",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/index.js",[],["101","102"],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/reportWebVitals.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/App/app.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/userContext.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Router/router.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/footer.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/App/welcomePage.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/login.js",["103","104"],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/loginForm.js",["105"],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/mainPage.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/validateInfo.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Login/useFormLogin.js",["106"],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useHistory} from 'react-router-dom';\n\nconst useForm = (callback, validate,setUserInfo) => {\n  const [values, setValues] = useState({\n    id: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const history = useHistory();\n\n  const [errors, setErrors] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrors(validate(values));\n    axios\n      .post(`http://localhost:3000/api/users/${values.email}`, values, {\n        withCredentials: true,\n      })\n      .then((res) => {\n        if (\n          res.data === \"Wrong password\" ||\n          res.data === \"User does not exist\"\n        ) {\n          alert(\"User or password did not match\");\n        } else {\n          setIsSubmitted(true);\n          setUserInfo({\n            id: res.data.id,\n            firstName: res.data.firstName,\n            lastName: res.data.lastName,\n            myFavorites: res.data.myFavorites,\n          });\n          // history.push({\n          //   pathname:'/',\n          //   state: res.data\n          // });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitted) {\n      callback();\n    }\n  }, [callback, errors, isSubmitted]);\n\n  return { handleChange, handleSubmit, values, errors };\n};\nexport default useForm;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/weatherAPI.js",["107"],"import React, { useState } from \"react\";\n\nconst WeatherAPI = () => {\n  const [weatherFeatures, setWeatherFeatures] = useState({\n    description: \"\",\n    temp: \"\",\n    location: \"\",\n  });\n\n  const fetchWeather = async () => {\n    const apiCall = await fetch(\"https://weplants.herokuapp.com/api/weather\");\n    const weather = await apiCall.json();\n    const celcius = Math.round(parseFloat(weather.main.temp) - 273.15);\n    const description = weather.weather[0].description;\n    const location = weather.name;\n    setWeatherFeatures({ description, celcius, location });\n  };\n\n  return (\n    <div className=\"row no-gutters\">\n      <div className=\"col-sm-6 col-md-8\" id=\"weather\">\n        <div id=\"description\">{weatherFeatures.description}</div>\n        <h1 id=\"temp\">{weatherFeatures.celcius}</h1>\n        <div id=\"location\">{weatherFeatures.location}</div>\n      </div>\n    </div>\n  );\n};\nexport default WeatherAPI;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/userInfo.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/myPlants.js",["108"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlantCard from \"../Plant/plantCard\";\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nconst useStylesResult = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: '#626262',\n  },\n  tableData: {\n    marginTop: 40,\n  },\n}));\n\nconst MyPlants = ({userInfo, setUserInfo}) => {\n  const history = useHistory();\n  const classes = useStylesResult();\n  const cardType = 'myPlant';\n  // const result = props.result.props.location.state;\n  const result = userInfo;\n\n  const deletePlant = (plantId) => {\n    axios.delete(`http://localhost:3000/api/users/${result.id}?plantId=${plantId}`, {\n      withCredentials: true,\n    })\n    .then(docs => {\n      console.log(docs);\n      // history.push({\n      //   pathname:'/',\n      //   state: docs.data\n      // });\n      setUserInfo({\n        id: docs.data.id,\n        firstName: docs.data.firstName,\n        lastName: docs.data.lastName,\n        // myFavorites: docs.data.myFavorites,\n      });\n      console.log('Successfully delete');\n    })\n    .catch(err => {console.log(err)});\n  }\n  \n  return (\n    <div className=\"row no-gutters\">\n      <div className=\"col-12\">\n        <h2 id=\"recent\">My plants</h2>\n        <div className=\"form-inline my-2 my-lg-0\">\n          <section className={classes.tableData}>\n            <div className={classes.root}>\n              <PlantCard result={result.myFavorites} cardType={cardType} deletePlant={deletePlant}/>\n            </div>\n          </section >\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MyPlants;","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/searchPlant.js",["109"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport PlantResult from './plantResult';\n\nconst SearchPlant = ({userInfo}) => {\n  // const userInfo = props.userInfo.props.location.state;\n  const [result, setResult] = useState(\"\");\n  const [plantName, setPlantName] = useState({\n    name: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setPlantName({\n      ...plantName,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = () => {\n    axios\n      .get(`http://localhost:3000/api/plants?name=${plantName.name}`, {\n        withCredentials: true,\n      })\n      .then((docs) => {\n        setResult(docs.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n      <div className=\"row no-gutters\">\n        <div className=\"col-12\">\n          <h2 id=\"recent\">Search Plants</h2>\n          <div className=\"form-inline my-2 my-lg-0\">\n            <input\n              className=\"form-control mr-sm-2\"\n              type=\"search\"\n              name=\"name\"\n              placeholder=\"Search\"\n              value={plantName.name}\n              onChange={handleChange}\n              aria-label=\"Search\"\n            />\n            <button\n              id=\"get-query-search\"\n              className=\"btn btn-outline-dark my-2 my-sm-0\"\n              type=\"submit\"\n              onClick={handleSubmit}\n            >\n              Search\n            </button>\n          </div>\n          {!result ? <p id=\"possible-error\">There is no results</p> : <PlantResult result={result} userId={userInfo.id}/>}\n        </div>\n      </div>\n  );\n};\nexport default SearchPlant;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/MainPage/plantResult.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Plant/plantCard.js",["110"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add'\nimport InfoIcon from '@material-ui/icons/Info';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles({\n  cardSize: {\n    height: 500,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: 'black',\n  },\n  titleBar: {\n    background: '#626262',\n    opacity: '50%'\n  },\n});\n\nconst PlantCard = ({ result, cardType, deletePlant, addToMyPlants }) => {\n  const classes = useStyles();\n\n  const handleClick = (id) => {\n    if (cardType === 'myPlant') {\n      deletePlant(id);\n    }\n    else if (cardType === 'result') {\n      addToMyPlants(id);\n    }\n  }\n\n  return (\n    <GridList className={classes.gridList} cols={1}>\n      {result.map((res) => (\n        <GridListTile style={{ height: 500 }} key={res.id}>\n          <img src={res.imageUrl} alt={res.name} />\n          <GridListTileBar\n            title={res.plantName}\n            classes={{\n              root: classes.titleBar,\n              title: classes.title,\n            }}\n            actionIcon={\n              <div>\n                <IconButton aria-label={`${res.name}`} onClick={() => { handleClick(res.id) }}>\n                  {cardType !== 'myPlant' ? <AddIcon className={classes.title} /> : <RemoveIcon className={classes.title} />}\n                </IconButton>\n                <IconButton>\n                  <InfoIcon className={classes.title} />\n                </IconButton>\n              </div>\n            }\n          />\n        </GridListTile>\n      ))}\n    </GridList>\n  );\n}\n\nexport default PlantCard;","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/form.js",["111","112"],"import React, { useState,useContext } from \"react\";\nimport \"./form.css\";\nimport FormSignup from \"./formSignup\";\nimport FormSuccess from \"./formSuccess\";\nimport {UserContext} from '../userContext';\n\n\nconst Form = (props) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const {userInfo, setUserInfo} = useContext(UserContext);\n  // console.log(userInfo);\n  function submitForm() {\n    setIsSubmitted(true);\n  }\n  console.log(props);\n\n  return (\n    <div className=\"form-container\">\n      {!isSubmitted ? <FormSignup submitForm={submitForm} /> : <FormSuccess />}\n    </div>\n  );\n};\nexport default Form;\n","/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/formSuccess.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/formSignup.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/validateInfo.js",[],"/Users/martinmazas/Desktop/WePlants/Second Deployment/WePlant-React/we_plants/src/Components/Register/useFormRegister.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":1,"column":29,"nodeType":"119","messageId":"120","endLine":1,"endColumn":38},{"ruleId":"117","severity":1,"message":"121","line":17,"column":10,"nodeType":"119","messageId":"120","endLine":17,"endColumn":20},{"ruleId":"117","severity":1,"message":"122","line":10,"column":7,"nodeType":"119","messageId":"120","endLine":10,"endColumn":16},{"ruleId":"117","severity":1,"message":"123","line":11,"column":9,"nodeType":"119","messageId":"120","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"124","line":10,"column":9,"nodeType":"119","messageId":"120","endLine":10,"endColumn":21},{"ruleId":"117","severity":1,"message":"123","line":21,"column":9,"nodeType":"119","messageId":"120","endLine":21,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"125","line":10,"column":10,"nodeType":"119","messageId":"120","endLine":10,"endColumn":18},{"ruleId":"117","severity":1,"message":"126","line":10,"column":20,"nodeType":"119","messageId":"120","endLine":10,"endColumn":31},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'history' is assigned a value but never used.","'fetchWeather' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]